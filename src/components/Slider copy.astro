---
// window.addEventListener('load', () => {
//   const reel = document.querySelector('.reel') as HTMLElement;
//   const boxes = reel.querySelectorAll('.l-box');
//   const middleIndex = Math.floor(boxes.length / 2);
//   let scrollPosition = 0;

//   for (let i = 0; i < middleIndex; i++) {
//     const box = boxes[i] as HTMLElement; // Assert that each box is an HTMLElement
//     scrollPosition += box.offsetWidth + parseInt(getComputedStyle(box).marginRight);
//   }

//   scrollPosition -= (window.innerWidth - (boxes[middleIndex] as HTMLElement).offsetWidth) / 2;

//   reel.scrollLeft = scrollPosition;
// });
---

<!-- <div class="slider | l-canvas--full-width">
  <div class="slider__slides">
    <div class="l-box l-frame">1</div>
    <div class="l-box l-frame">2</div>
    <div class="l-box l-frame">3</div>
  </div>
  <div class="slider__controls | l-cluster">
    <span>x</span>
    <span>x</span>
  </div>
</div> -->

<div class="l-canvas--full-width">
  <div class="reel | u-mbs-l-xl">
    <!-- <div class="l-box l-frame">
      <img src="images/image-slide-1.jpg" alt="">
    </div> -->
    <!-- <div class="l-box l-frame">
      <img src="images/image-slide-2.jpg" alt="">
    </div> -->
    <div class="l-box l-frame">
      <img src="images/image-slide-3.jpg" alt="">
    </div>
    <div class="l-box l-frame">
      <img src="images/image-slide-4.jpg" alt="">
    </div>
    <div class="l-box l-frame">
      <img src="images/image-slide-5.jpg" alt="">
    </div>
  </div>
</div>

<script>
  window.addEventListener('load', () => {
    const reel = document.querySelector('.reel') as HTMLElement;
    const boxes = reel.querySelectorAll('.l-box');
    let totalWidthOfBoxes = 0;

    // Calculate the total width of all boxes
    boxes.forEach(box => {
      totalWidthOfBoxes += (box as HTMLElement).offsetWidth + parseInt(getComputedStyle(box).marginRight) + parseInt(getComputedStyle(box).marginLeft);
    });

    // Calculate the total width of the reel (if it's not set to the total width of boxes, adjust accordingly)
    const reelWidth = totalWidthOfBoxes; // Adjust this if the reel's width is not the sum of its children's widths
    console.log(reelWidth);
    // 1652

    // Calculate the initial scroll position to center the content
    const scrollPosition = (reelWidth - window.innerWidth) / 2;

    reel.scrollLeft = scrollPosition;
  });
</script>

<style lang="scss">
  // @import '../styles/20-mixins/media-query.scss';

  .slider {
    background-color: pink;
    margin-block-start: var(--space-gutter-l);
    
    &__slides {
      display: flex;
      gap: var(--space-gutter-s);
      block-size: 50vh;
      overflow-x: auto;
      scrollbar-color: red blue;

      &::-webkit-scrollbar {
        block-size: 1rem;
      }
      &::-webkit-scrollbar-track {
        background-color: green;
      }
      &::-webkit-scrollbar-thumb {
        --color-dark: purple;
        --color-light: yellow;
        background-color: var(--color-dark);
        background-image: linear-gradient(var(--color-dark) 0, var(--color-dark) 0.25rem, var(--color-light) 0.25rem, var(--color-light) 0.75rem, var(--color-dark) 0.75rem);
      }

      & > * {
        flex: 0 0 80%;
        block-size: 100%;
        inline-size: auto;
      }
    }

    .slide {
      // position: absolute;
      // inset-inline-start: 50%;
      // transform: translateX(-50%);

      // &--1 {
      //   display: block;
      //   transform: translateX(-150%);
      //   }
        
      // &--2 {
      //   display: block;
      //   transform: translateX(-50%);
      //   }
          
      // &--3 {
      //   display: block;
      //   transform: translateX(50%);
      // }
    }

    &__controls {
      --cluster-horizontal-alignment: center;
      margin-block-start: var(--space-gutter-l);
    }
  }

  .reel {
    display: flex;
    block-size: min(50vh, 50vw);
    overflow-x: auto;
    overflow-y: hidden;
    scrollbar-color: #fff #000;

    & .l-box {
      --space-box: 0;
    }
  }

  .reel::-webkit-scrollbar {
    block-size: 1rem;
  }
  .reel::-webkit-scrollbar-track {
    background-color: #000;
  }
  .reel::-webkit-scrollbar-thumb {
    background-color: #000;
    background-image: linear-gradient(#000 0, #000 0.25rem, #fff 0.25rem, #fff 0.75rem, #000 0.75rem);
  }

  .reel > * {
    flex: 0 0 auto;
  }


  .reel > img {
    block-size: 100%;
    flex-basis: auto;
    width: auto;
  }

  .reel > * + * {
    margin-inline-start: var(--space-gutter-s);
  }

  .reel.overflowing {
    padding-block-end: 1rem;
  }
</style>